/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package web.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import web.service.MessageService;
import web.service.UsersService;
import domain.Meses;
import domain.Users;

/** 
 * MyEclipse Struts
 * Creation date: 12-24-2016
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class ChatAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private UsersService usersService;
	private MessageService messageService;
	public void setUsersService(UsersService usersService) {
		this.usersService = usersService;
	}
	public void setMessageService(MessageService messageService) {
		this.messageService = messageService;
	}

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward goChatUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String id = request.getParameter("id");
		Users users = usersService.findUsersById(Integer.parseInt(id));
		request.setAttribute("getter", users);
		return mapping.findForward("goChatUI");
	}
	
	
	@SuppressWarnings("static-access")
	public ActionForward goChat(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		response.setHeader("Content-Type", "text/xml;charset=utf-8");
		response.setHeader("Cache-Control", "no-cache");
		
		Meses meses = new Meses();
		String gId = request.getParameter("gId");
		meses.setUsersByGid(usersService.findUsersById(Integer.parseInt(gId)));
		meses.setCon(request.getParameter("message"));
		meses.setStime(new Date());
		meses.setIsget(0);
		meses.setUsersBySid((Users)request.getSession().getAttribute("userInfo"));
		messageService.save(meses);
		//request.setAttribute("getter", users);
		//将消息返回至jsp
		try {        
			System.out.println(meses.toString());
			response.getWriter().print(meses.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
	
	public ActionForward getMessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		response.setHeader("Content-Type", "text/xml;charset=utf-8");
		response.setHeader("Cache-Control", "no-cache");
		Users getter = (Users) request.getSession().getAttribute("userInfo");
		String sid = request.getParameter("sid");
		List<Meses> mesesList= messageService.getMeses(getter.getId(),Integer.parseInt(sid));
		
		JSONArray json = new JSONArray();
		List list = new ArrayList();
		for(Meses meses : mesesList){
			meses.setIsget(1);
			messageService.updateMeses(meses);
			String mes = meses.toString();
			list.add(mes);
		}
		String jmeses =json.fromObject(list).toString();
		try {
			response.getWriter().print(jmeses);
			System.out.println(jmeses);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	}
}