<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 启用注解 -->
	<context:annotation-config />
	<!-- <context:component-scan />  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/mysql?useUnicode=true&amp;characterEncoding=UTF-8"/>
	    <property name="username" value="root"/>
	    <property name="password" value="root"/>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="30" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<property name="dataSource" ref="dataSource" />

		<property name="mappingResources">

			<list>

				<value>domain/Users.hbm.xml</value>
				<value>domain/Meses.hbm.xml</value>

			</list>

		</property>

		<property name="hibernateProperties">

			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
			</value>

		</property>

	</bean>
	<!-- 配置service -->
	<bean id = "usersService" class="web.service.UsersService">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id = "messageService" class="web.service.MessageService">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="/login" class="web.action.LoginAction">
		<property name="usersService" ref="usersService"></property>
	</bean>
	<bean name="/chat" class="web.action.ChatAction">
		<property name="usersService" ref="usersService"></property>
		<property name="messageService" ref="messageService"></property>
	</bean>
	<!-- 配置事务管理器 管理sessionFactory-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- ****启用事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>